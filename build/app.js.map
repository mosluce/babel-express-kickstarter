{"version":3,"sources":["app.js"],"names":[],"mappings":";;AAAA,IAAM,UAAU,QAAQ,SAAR,CAAhB;AACA,IAAM,OAAO,QAAQ,MAAR,CAAb;;AAEA,IAAM,SAAS,QAAQ,QAAR,CAAf;AACA,IAAM,eAAe,QAAQ,eAAR,CAArB;AACA,IAAM,aAAa,QAAQ,aAAR,CAAnB;;AAEA,IAAM,MAAM,SAAZ;AACA,IAAM,cAAc,QAAQ,eAAR,CAApB;;;AAGA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,CAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;;;AAIA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,KAAX,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,WAAb;;;AAGA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACxB,QAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,QAAI,MAAJ,GAAa,GAAb;AACA,SAAK,GAAL;AACH,CAJD;;;;;;AAUA,IAAI,IAAI,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AAClC,QAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAyB;AAC7B,YAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,YAAI,MAAJ,CAAW,OAAX,EAAoB;AAChB,qBAAS,IAAI,OADG;AAEhB,mBAAO;AAFS,SAApB;AAIH,KAND;AAOH;;;;AAID,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAyB;AAC7B,QAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,QAAI,MAAJ,CAAW,OAAX,EAAoB;AAChB,iBAAS,IAAI,OADG;AAEhB,eAAO;AAFS,KAApB;AAIH,CAND;;AASA,OAAO,OAAP,GAAiB,GAAjB","file":"app.js","sourcesContent":["const express = require('express');\nconst path = require('path');\n// const favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst controllers = require('./controllers');\n\n// view engine setup\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, '../public')));\n\napp.use('/', controllers);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use((err, req, res, next) => {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use((err, req, res, next) => {\n    res.status(err.status || 500);\n    res.render('error', {\n        message: err.message,\n        error: {}\n    });\n});\n\n\nmodule.exports = app;\n"],"sourceRoot":"/Users/mosluce/Documents/Workspace/Node/gotyou-api-mongo/src"}